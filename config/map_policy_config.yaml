defaults:
  - _self_
  - override hydra/hydra_logging: disabled
  - override hydra/job_logging: disabled

# Disable obstacle avoidance
disable_obstacle_avoidance: True

# Goal, specified relative to Spot
# goal_x: 38.0
# goal_y: -16.0
goal_x: 7.0
goal_y: 0.0

# Policy configs
## Trained given a map as input. Can get from 1157 to 1161 
# weights: weights/map_policies/spot_depth_context_resnet18_map_prevact_sincos32_log_rot_100_0.5_sd_1_ckpt_67.pth
## New policy using adaptive map scaling
weights: weights/spot_depth_context_resnet18_map_prevact_sincos32_log_rot_100_-1.0_cma_sd_1_ckpt_98.pth

sensor_type: depth
policy_name: PointNavContextCMAPolicy
use_horizontal_velocity: False
deterministic: True 

# waypoint configs
use_local_coords: True
waypoint_start: -1 
waypoint_end: -1

# Control configs
ctrl_hz: 2
max_lin_dist: 0.25 # m/s
max_ang_dist: 0.26 # rad/s

# Success criteria
success_dist: 0.35
project_goal: -1  
log_goal: True
max_episode_steps: 500

# context configs
context_type: map
map: maps/coda_left.png
map_goal: maps/coda_left_goal.png
# map: maps/coda_right.png
# map_goal: maps/coda_right_goal.png
map_resolution: 100
meters_per_pixel: 0.15
use_agent_map: True

# Debug mode
debug: True # saves images to disk
timeout: -1 # terminate if X seconds passes. Set to -1 if you don't want to use a timeout
use_keyboard: False # wait for keyboard input before stepping robot

hydra:
  output_subdir: null
  run:
    dir: .